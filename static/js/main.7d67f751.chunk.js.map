{"version":3,"sources":["app/styles/base.js","app/components/conditionalRender.js","app/components/NavLocation.js","app/components/timeCount.js","app/components/featureCountDown.js","app/components/countdown.js","app/screens/DemoHome/Main.js","App.js","serviceWorker.js","index.js"],"names":["dimensions","window","innerHeight","innerWidth","padding","colors","font","renderIf","condition","content","ComponentName","props","state","this","title","iconName","style","navContainer","iconBackground","icon","color","size","titleStyle","Component","alignSelf","textAlign","justifyContent","display","borderRadius","background","alignItems","fontSize","container","margin","paddingLeft","paddingRight","valueBody","border","timevalue","paddingTop","paddingBottom","componentName","secCount","onClick","value","Feature","componentDidMount","a","CountDown","header","countdown","marginTop","fontFamily","fontWeight","Main","firstDate","Date","secondDate","delta","Math","abs","days","floor","hours","minutes","seconds","console","log","daysleft","hoursLeft","topContent","paragraph","navigation","countDownBody","minutesleft","secondsLeft","width","marginBottom","flex","flexDirection","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d67f751.chunk.js","sourcesContent":["export const divStyle = {\n    margin: '40px',\n    border: '5px solid pink'\n  };\n export const pStyle = {\n    fontSize: '15px',\n    textAlign: 'center'\n  };\n export const dimensions = {\n      height: window.innerHeight,\n      width: window.innerWidth,\n  }\n export const padding = {\n  thin: 5,\n  sm: 10,\n  md: 20,\n  lg: 30,\n  xl: 40,\n}\n  export const colors = {\n    grey: '#707070',\n    primaryOne: '#0181FF',\n    black: '#000',\n    background: '#000',\n    white: '#fff',\n  }\n  export const iconSize = {\n    sm: 10,\n    md: 25,\n    lg: 30,\n    xl: 40,\n  };\n  export const componentShadow = {\n    color: '#000',\n    boxradius: 5,\n    offset: {\n      width: 0,\n      height: 1.5,\n    },\n    opacity: 0.2,\n    radius: 3.3,\n    elevation: 1.5,\n  };\n  \n  // ALl font styles throughout the AddyFlex mobile Application\n  export const font = {\n    xsm: 12,\n    sm: 14,\n    reg: 16,\n    md: 18,\n    lg: 20,\n    acclag: 25,\n    xl: 30,\n    family: 'Gill Sans',\n    bold: '700',\n    extraBold: '800',\n    regular: '500',\n    thin: '300',\n  }","export default function renderIf(condition, content) {\n    if (condition) {\n      return content;\n    } else {\n      return null;\n    }\n  }\n  ","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport {padding, font, colors, iconSize, dimensions} from '../styles/base';\nimport renderIf from './conditionalRender';\nimport {IoMdHome, IoIosChatbubbles, IoMdAnalytics, IoIosPaper} from 'react-icons/io'\nimport '../../App.css'\n\n\nexport default class ComponentName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const {title, iconName} = this.props;\n    return (\n      <div style={navContainer}>\n\n      <div style={iconBackground}>\n            {renderIf(\n              iconName === 'IoMdHome',\n              <IoMdHome style={icon} color={colors.white}  size={dimensions.width * 0.05} />,\n            )}\n            {renderIf(\n              iconName === 'IoMdAnalytics',\n              <IoMdAnalytics style={icon} color={colors.white}  size={dimensions.width * 0.05} />,\n            )}\n            {renderIf(\n              iconName === 'IoIosPaper',\n              <IoIosPaper style={icon} color={colors.white}  size={dimensions.width * 0.05} />,\n            )}\n            {renderIf(\n              iconName === 'IoIosChatbubbles',\n              <IoIosChatbubbles style={icon} color={colors.white} size={dimensions.width * 0.05} />,\n            )}\n          \n        </div>\n          <p style={titleStyle}>{title}</p>\n      </div>\n    );\n  }\n}\n\nconst navContainer = {\n  padding: padding.sm,\n  alignSelf: 'center',\n  textAlign: 'center',\n  justifyContent: 'center',\n  display: 'block',\n  borderRadius: padding.md,\n};\nconst iconBackground = {\n  background: colors.background,\n  display: 'inline-block',\n  alignItems: 'center',\n  alignSelf: 'center',\n  borderRadius: padding.md,\n  padding: padding.md,\n}\nconst icon = {\n  alignSelf: 'center',\n}\nconst titleStyle = {\n  fontSize: font.sm,\n  alignSelf: 'center',\n  display: 'block',\n  color: colors.black\n}\n","import React from 'react';\nimport {padding, colors, dimensions, font} from '../styles/base';\nimport '../../App.css';\n\nconst componentName = ({title, onClick, value, secCount}) => (\n  <div style={container}>\n    <div style={valueBody}>\n        <p style={timevalue}>{secCount}</p>\n    </div>\n    <p style={titleStyle}>{title}</p>\n  </div>\n);\nconst container = {\n    padding: 0,\n    margin: 0,\n    paddingLeft: padding.md,\n    paddingRight: padding.md,\n};\nconst valueBody = {\n    textAlign: 'center',\n    justifyContent: 'center',\n    borderRadius: padding.sm,\n    padding: 0,\n    margin: 0,\n    border: '1px solid black'\n}\nconst timevalue = {\n    padding: 0,\n    margin: 0,\n    paddingLeft: padding.md,\n    paddingRight: padding.md,\n    paddingTop: padding.sm,\n    paddingBottom: padding.sm,\n}\nconst titleStyle = {\n    padding: 0,\n    margin: 0,\n    paddingTop: padding.thin,\n}\nexport default componentName;\n","/* eslint-disable react/no-did-mount-set-state */\nimport React, {Component} from 'react';\nimport {padding, colors, dimensions, font} from '../styles/base'\nimport TimeCount from './timeCount';\nexport default class Feature extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secCount: 0\n    };\n  }\n  componentDidMount = async () => {};\n  render() {\n    return (\n      <div style={container}>\n      <TimeCount title='DAYS' value='22' secCount={this.state.secCount} />\n\n      <TimeCount title='HOURS' value='22' secCount={this.state.secCount} />\n\n      <TimeCount title='MINUTES' value='22' secCount={this.state.secCount} />\n\n      <TimeCount title='SECONDS' value='22' secCount={this.state.secCount} />\n      </div>\n    );\n  }\n}\n\nconst container = {\n  display: 'flex',\n  alignSelf: 'center',\n  paddingLeft: padding.md,\n  paddingRight: padding.md,\n}\nconst content = {\n  display: 'flex',\n  flex: 1,\n  background: colors.background,\n  textAlign: 'center',\n  alignItems: 'center',\n  borderRadius: padding.sm,\n}\nconst header = {\n  fontSize: font.md,\n  color: colors.black,\n}\nconst countdown ={\n  width: dimensions.width * 0.3,\n  display: 'flex',\n  justifyContent: 'space-between',\n  background: colors.primaryOne,\n  marginLeft: dimensions.width * 0.15,\n}","/* eslint-disable react/no-did-mount-set-state */\nimport React, {Component} from 'react';\nimport {padding, colors, dimensions, font} from '../styles/base'\nimport TimeCount from './timeCount';\nimport Feature from './featureCountDown';\nexport default class CountDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secCount: 0\n    };\n  }\n  componentDidMount = async () => {};\n  render() {\n    return (\n      <div style={container}>\n        <div style={content}>\n          <header style={header}>Name of Feature:</header>\n          <div style={countdown}>\n          <Feature />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst container = {\n  display: 'flex',\n  alignSelf: 'center',\n  marginTop: dimensions.height * 0.08,\n  paddingLeft: dimensions.width * 0.1,\n  paddingRight: dimensions.width * 0.1,\n}\nconst content = {\n  display: 'flex',\n  background: colors.white,\n  textAlign: 'center',\n  alignItems: 'center',\n  borderRadius: padding.md,\n  padding: padding.sm,\n}\nconst header = {\n  fontSize: font.md,\n  color: colors.black,\n  paddingLeft: padding.sm,\n  fontFamily: 'Helvetica',\n  fontWeight: 'bold',\n}\nconst countdown ={\n  padding: 0,\n  margin: 0\n}","/* eslint-disable react/no-did-mount-set-state */\nimport React, {Component} from 'react';\nimport '../../../App.css';\nimport {dimensions, colors, padding, font} from '../../styles/base';\nimport NavLocation from '../../components/NavLocation';\nimport CountDown from '../../components/countdown';\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: null,\n      seconds: null,\n      daysleft: null,\n      hoursLeft: null,\n    };\n  }\n  componentDidMount = async () => {\n    const firstDate = new Date();\n    const secondDate = (new Date('Fri Apr 30 2020 18:30:00 GMT+0100 (West Africa Standard Time)'))\n\n    // get total seconds between the times\n    var delta = Math.abs(secondDate - firstDate) / 1000;\n\n    // calculate (and subtract) whole days\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n\n    // calculate (and subtract) whole hours\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n\n    // calculate (and subtract) whole minutes\n    var minutes = Math.floor(delta / 60) % 60;\n    delta -= minutes * 60;\n\n    // what's left is seconds\n    var seconds = delta % 60;  // in theory the modulus is not required\n    console.log(days + ' : ' + hours  + ' : ' + minutes + ' : ' + seconds)\n  };\n  render() {\n    return (\n      <div style={container}>\n        <div style={topContent}>\n        <header style={header}>WELCOME TO BROADWAY MONEY</header>\n        <p style={paragraph}>This project is currently being developed by AppDex we appreciate your efforts towards the success of this project,\n            it is important to us that you report any bugs or abnormality through by dropping message in the testers review.\n              for more information about the project kindly check out the project GUI to understand specifications.\n         </p>\n        </div>\n        <div style={navigation}>\n          <div><NavLocation title='PROJECT HOME' iconName='IoMdHome' /></div>\n          <div><NavLocation title='ADMIN HOME' iconName='IoMdAnalytics' /></div>\n          <div><NavLocation title='PROJECT GUI' iconName='IoIosPaper' /></div>\n          <div><NavLocation title='TESTER REVIEW' iconName='IoIosChatbubbles' /></div>\n        </div>\n\n        <div style={countDownBody}>\n          <CountDown minutesleft={this.state.minutes} secondsLeft={this.state.seconds}  />\n          <CountDown minutesleft={this.state.minutes} secondsLeft={this.state.seconds}  />\n        </div>\n      </div>\n    );\n  }\n}\nconst container = {\n    background: colors.white,\n    padding: padding.lg,\n    paddingLeft: padding.xl,\n    width: dimensions.width * 0.85,\n    paddingRight: padding.xl,\n    justifyContent: 'center',\n    borderRadius: padding.sm,\n    alignSelf: 'center',\n    marginBottom: dimensions.height * 0.08,\n    display: 'block',\n  };\n  const topContent = {\n    marginBottom: padding.lg,\n  };\n  const header = {\n    color: colors.black,\n    marginTop: padding.lg,\n    fontFamily: 'Helvetica',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: font.lg,\n    marginBottom: padding.md,\n  };\n  const paragraph = {\n    color: colors.black,\n    fontSize: 16,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    textAlign: 'center',\n    fontFamily: 'Helvetica'\n  }\n  const countDownBody = {\n    flex: 1,\n    flexDirection: 'column',\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  }\n  const navigation = {\n    flex: 1,\n    flexDirection: 'row',\n    padding: padding.sm,\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    paddingLeft: padding.lg,\n    paddingRight: padding.lg,\n    marginTop: dimensions.height * 0.1,\n  }\n  // const content = {\n  //   flex: 1,\n  //   flexDirection: 'column',\n  //   width: dimensions.width * 0.90,\n  //   margin: 20,\n  //   padding: 20,\n  //   borderRadius: 39,\n  //   alignSelf: 'center',\n  //   background: colors.grey,\n  // };","import React from 'react';\nimport Home from './app/screens/DemoHome/Main';\nimport {dimensions, colors, padding} from './app/styles/base'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div style={container}>\n          <Home />\n    </div>\n  );\n}\nconst container = {\n  flex: 1,\n  padding: padding.xl,\n  background: colors.background,\n  display: 'flex',\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}